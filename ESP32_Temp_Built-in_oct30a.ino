#include "arduino_secrets.h"
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/ac381c83-fa10-4cfe-a345-ee185259f9b8 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  CloudContactSensor isRaining;
  CloudTemperatureSensor moduleTemp;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include "temperature.h"

#define LED_BUILTIN 2

// ESP32 DEV KIT V1: D15=GPIO15
#define PIN_RAIN_METER  16
#define PIN_DHT         14

//#define DHTTYPE DHT11   // DHT 11
#define DHTTYPE DHT22   // DHT 22  (AM2302), AM2321
//#define DHTTYPE DHT21   // DHT 21 (AM2301)
DHT dht(PIN_DHT, DHTTYPE);

#define MS_TO_S_FACTOR          1000UL
#define LOOP_DELAY_IN_SEC       1

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information you’ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();

  pinMode(LED_BUILTIN, OUTPUT);
  pinMode(PIN_RAIN_METER, INPUT);
  
  dht.begin();
  Serial.print(F("Setting up..."));
  Serial.println();
}

void loop() {
  ArduinoCloud.update();
  readingSensors();
  delay(LOOP_DELAY_IN_SEC * MS_TO_S_FACTOR);
}

void readingSensors() {

  /* ------ BUILD-IN TEMP ------ */
  builtInTemp = readESP32Celsius();
  Serial.print(F("ESP32 on-board output   >> Temp: "));
  Serial.print(builtInTemp);
  Serial.println(F("°C"));
  /* ------ BUILD-IN TEMP ------ */



  /* ------ DHT22 ------ */
  // delay(2000); // DHT11 is very slow sensor

  float humidity = dht.readHumidity();
  float celcius = dht.readTemperature();

  if (isnan(humidity) || isnan(celcius)) {
    Serial.println(F("Failed to read from DHT sensor!"));
  }

  moduleTemp = celcius;  
  moduleHumidity = humidity;  
  Serial.print(F("DHT22 output            >> Temp: "));
  Serial.print(celcius);
  Serial.print(F("°C, Humidity: "));
  Serial.print(humidity);
  Serial.println(F("%"));
  /* ------ DHT22 ------ */



  /* ------ RAINDROPS SENSOR ------ */
  // u_int rainMeter = analogRead(PIN_D15_RAIN_METER);

  // rainingPercentage = analogRead(PIN_D15_RAIN_METER);
  
  // rainMeter = map(rainMeter, 0, 1023, 0, 100);
  // bool isSunny = (rainMeter < 20);
  bool isSunny = digitalRead(PIN_RAIN_METER);
  isRaining = !isSunny;

  // isRaining can be no value.
  if (isRaining) {
    Serial.println(F("Failed to read from Raindrops sensor!"));
  }

  digitalWrite(LED_BUILTIN, isRaining ? HIGH : LOW);
  Serial.print(F("Raindrops output        >> "));
  Serial.println(isRaining);
  /* ------ RAINDROPS SENSOR ------ */
  
}
